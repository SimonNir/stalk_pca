geometric-optimize called with the following command line:
relax.py

                                        [91m())))))))))))))))/[0m                     
                                    [91m())))))))))))))))))))))))),[0m                
                                [91m*)))))))))))))))))))))))))))))))))[0m             
                        [94m#,[0m    [91m()))))))))/[0m                [91m.)))))))))),[0m          
                      [94m#%%%%,[0m  [91m())))))[0m                        [91m.))))))))*[0m        
                      [94m*%%%%%%,[0m  [91m))[0m              [93m..[0m              [91m,))))))).[0m      
                        [94m*%%%%%%,[0m         [93m***************/.[0m        [91m.)))))))[0m     
                [94m#%%/[0m      [94m(%%%%%%,[0m    [93m/*********************.[0m       [91m)))))))[0m    
              [94m.%%%%%%#[0m      [94m*%%%%%%,[0m  [93m*******/,[0m     [93m**********,[0m      [91m.))))))[0m   
                [94m.%%%%%%/[0m      [94m*%%%%%%,[0m  [93m**[0m              [93m********[0m      [91m.))))))[0m  
          [94m##[0m      [94m.%%%%%%/[0m      [94m(%%%%%%,[0m                  [93m,******[0m      [91m/)))))[0m  
        [94m%%%%%%[0m      [94m.%%%%%%#[0m      [94m*%%%%%%,[0m    [92m,/////.[0m       [93m******[0m      [91m))))))[0m 
      [94m#%[0m      [94m%%[0m      [94m.%%%%%%/[0m      [94m*%%%%%%,[0m  [92m////////,[0m      [93m*****/[0m     [91m,)))))[0m 
    [94m#%%[0m  [94m%%%[0m  [94m%%%#[0m      [94m.%%%%%%/[0m      [94m(%%%%%%,[0m  [92m///////.[0m     [93m/*****[0m      [91m))))).[0m
  [94m#%%%%.[0m      [94m%%%%%#[0m      [94m/%%%%%%*[0m      [94m#%%%%%%[0m   [92m/////)[0m     [93m******[0m      [91m))))),[0m
    [94m#%%%%##%[0m  [94m%%%#[0m      [94m.%%%%%%/[0m      [94m(%%%%%%,[0m  [92m///////.[0m     [93m/*****[0m      [91m))))).[0m
      [94m##[0m     [94m%%%[0m      [94m.%%%%%%/[0m      [94m*%%%%%%,[0m  [92m////////.[0m      [93m*****/[0m     [91m,)))))[0m 
        [94m#%%%%#[0m      [94m/%%%%%%/[0m      [94m(%%%%%%[0m      [92m/)/)//[0m       [93m******[0m      [91m))))))[0m 
          [94m##[0m      [94m.%%%%%%/[0m      [94m(%%%%%%,[0m                  [93m*******[0m      [91m))))))[0m  
                [94m.%%%%%%/[0m      [94m*%%%%%%,[0m  [93m**.[0m             [93m/*******[0m      [91m.))))))[0m  
              [94m*%%%%%%/[0m      [94m(%%%%%%[0m   [93m********/*..,*/*********[0m       [91m*))))))[0m   
                [94m#%%/[0m      [94m(%%%%%%,[0m    [93m*********************/[0m        [91m)))))))[0m    
                        [94m*%%%%%%,[0m         [93m,**************/[0m         [91m,))))))/[0m     
                      [94m(%%%%%%[0m   [91m()[0m                              [91m))))))))[0m       
                      [94m#%%%%,[0m  [91m())))))[0m                        [91m,)))))))),[0m        
                        [94m#,[0m    [91m())))))))))[0m                [91m,)))))))))).[0m          
                                 [91m()))))))))))))))))))))))))))))))/[0m             
                                    [91m())))))))))))))))))))))))).[0m                
                                         [91m())))))))))))))),[0m                     

-=# [1;94m geomeTRIC started. Version: 1.1 [0m #=-
Current date and time: 2025-08-16 20:31:40
#========================================================#
#| [92m    Arguments passed to driver run_optimizer():     [0m |#
#========================================================#
customengine              <pyscf.geomopt.geometric_solver.PySCFEngine object at 0x7fcd90474c10> 
input                     /tmp/tmpvkf1krde/459a0a4e-6e31-4065-8858-c33e89dfa6b0 
logIni                    /users/snirenbe/stalk_venv/lib64/python3.11/site-packages/pyscf/geomopt/log.ini 
maxiter                   100 
----------------------------------------------------------
Custom engine selected.
Bonds will be generated from interatomic distances less than 1.20 times sum of covalent radii
6 internal coordinates being used (instead of 6 Cartesians)
Internal coordinate system (atoms numbered from 1):
Distance 1-2
Translation-X 1-2
Translation-Y 1-2
Translation-Z 1-2
Rotation-A 1-2
Rotation-B 1-2
Rotation-C 1-2
<class 'geometric.internal.Distance'> : 1
<class 'geometric.internal.TranslationX'> : 1
<class 'geometric.internal.TranslationY'> : 1
<class 'geometric.internal.TranslationZ'> : 1
<class 'geometric.internal.RotationA'> : 1
<class 'geometric.internal.RotationB'> : 1
<class 'geometric.internal.RotationC'> : 1
> ===== Optimization Info: ====
> Job type: Energy minimization
> Maximum number of optimization cycles: 100
> Initial / maximum trust radius (Angstrom): 0.100 / 0.300
> Convergence Criteria:
> Will converge when all 5 criteria are reached:
>  |Delta-E| < 1.00e-06
>  RMS-Grad  < 3.00e-04
>  Max-Grad  < 4.50e-04
>  RMS-Disp  < 1.20e-03
>  Max-Disp  < 1.80e-03
> === End Optimization Info ===
Step    0 : Gradient = 8.559e-03/8.559e-03 (rms/max) Energy = -10.7885238107
Hessian Eigenvalues: 5.00000e-02 5.00000e-02 5.00000e-02 ... 5.00000e-02 5.00000e-02 2.85189e-01
Step    1 : Displace = [0m7.941e-03[0m/[0m7.941e-03[0m (rms/max) Trust = 1.000e-01 (=) Grad = [92m9.935e-05[0m/[92m9.935e-05[0m (rms/max) E (change) = -10.7886516460 ([0m-1.278e-04[0m) Quality = [0m0.995[0m
Hessian Eigenvalues: 5.00000e-02 5.00000e-02 5.00000e-02 ... 5.00000e-02 5.00000e-02 2.81879e-01
Step    2 : Displace = [92m9.325e-05[0m/[92m9.325e-05[0m (rms/max) Trust = 1.414e-01 ([92m+[0m) Grad = [92m4.867e-06[0m/[92m4.867e-06[0m (rms/max) E (change) = -10.7886516641 ([92m-1.813e-08[0m) Quality = [0m1.035[0m
Hessian Eigenvalues: 5.00000e-02 5.00000e-02 5.00000e-02 ... 5.00000e-02 5.00000e-02 2.81879e-01
Converged! =D

    #==========================================================================#
    #| If this code has benefited your research, please support us by citing: |#
    #|                                                                        |#
    #| Wang, L.-P.; Song, C.C. (2016) "Geometry optimization made simple with |#
    #| translation and rotation coordinates", J. Chem, Phys. 144, 214108.     |#
    #| http://dx.doi.org/10.1063/1.4952956                                    |#
    #==========================================================================#
    Time elapsed since start of run_optimizer: 2.379 seconds
